{"version":3,"sources":["components/navigation/Navigation.js","components/employee/Employee.js","components/dashboard/DashBoard.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","href","src","alt","height","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","color","size","id","Component","Employee","state","selectedFile","project","addProduct","props","onRouteChange","includeProduct","fetch","method","headers","body","JSON","stringify","name","title","url","then","res","json","data","setState","catch","err","console","log","cancelSubmit","fileChangedHandler","event","URL","createObjectURL","target","files","response","this","map","user","key","route","onClick","htmlFor","required","onChange","titleChange","urlChange","DashBoard","employee","position","salary","status","trial","period","updateName","updatePosition","updateSalary","updateStatus","updateTrial","updatePeriod","updateUrl","modName","delId","delete","includeEmployee","updateEmployee","handleChange","value","initialFormValue","rec","secondFormValue","vac","deletedEmployee","info","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","placeholder","data-error","data-success","sort","a","b","checked","App","handleRouteChange","handleProjectTitleChange","e","handleProjectUrlChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ab785d85.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Navigation.css'\r\nimport {FaEnvelope, FaBars} from 'react-icons/fa'\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div className='navs'>\r\n                <nav className=\"mb-1 navbar navbar-expand-lg navbar-dark  lighten-1\">\r\n                <a className=\"navbar-brand\" href=\"#.\"><img src=\"https://res.cloudinary.com/valodagreat/image/upload/v1596150337/mqqfqpqgos8zbi53urx5_v0toea_2_skjdsf.jpg\"\r\n                    className=\"\" alt=\"avatar\" height=\"80\" width=\"180\"/></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-555\"\r\n                    aria-controls=\"navbarSupportedContent-555\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"><FaBars color='#bdbdbd' size='40' /></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-555\">\r\n                    <ul className=\"navbar-nav mx-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link linkcolor p-3\" href=\"#.\">Calendar\r\n                        <span className=\"sr-only\">(current)</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link linkcolor p-3\" href=\"#.\">Statistic</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link linkcolor p-3\" href=\"#.\">Employee</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link linkcolor p-3\" href=\"#.\">Client</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link linkcolor p-3\" href=\"#.\">Equipment</a>\r\n                    </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto nav-flex-icons\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link waves-effect waves-light\" href='#.'>\r\n                    <FaEnvelope color='#bdbdbd'/>\r\n                    </a>\r\n                </li>\r\n                    <li className=\"nav-item avatar\">\r\n                        <a className=\"nav-link p-0\" href=\"#.\">\r\n                        <img src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-5.jpg\" className=\"rounded-circle z-depth-0\"\r\n                            alt=\"avatar\" height=\"35\"/>\r\n                        </a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation\r\n","import React, { Component } from 'react'\r\nimport './Employee.css'\r\n\r\nclass Employee extends Component {\r\n    state={\r\n        selectedFile : null,\r\n        project : [\r\n    ]}\r\n    \r\n    addProduct=()=>{\r\n        this.props.onRouteChange('addproduct')\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://frozen-woodland-32017.herokuapp.com')\r\n        .then(response =>response.json())\r\n        .then(data=>{\r\n            this.setState({project : data})\r\n        })\r\n    }\r\n\r\n    includeProduct=()=>{\r\n        fetch('https://frozen-woodland-32017.herokuapp.com/profile',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name : this.props.title,\r\n                url : this.state.selectedFile\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            this.props.onRouteChange('noProduct')\r\n            this.setState({ project: data})\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    cancelSubmit=()=>{\r\n        this.props.onRouteChange('noProduct')\r\n    }\r\n\r\n    fileChangedHandler = event => {\r\n        console.log(URL.createObjectURL(event.target.files[0]))\r\n        this.setState({ selectedFile: URL.createObjectURL(event.target.files[0]) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='breadth'>\r\n                <h2 className='p-3 h'>employee</h2>\r\n                <div className=\"card rounded m-5\">\r\n                    <p className='p-3'><img className='p-2 rounded-circle z-depth-0' src='https://res.cloudinary.com/valodagreat/image/upload/v1596154086/employ_2_l3js3z.png' height='65' alt='stuff'/> \r\n                    <span className='employ'>All Employees</span></p>\r\n                    <h5 className='p-3 s'>Projects</h5>\r\n                    {this.state.project.map(user =><p key={user.project} className='p-3'><img className='p-2 rounded-circle z-depth-0' src={user.url} height='65' width='65' alt='stuff'/> \r\n                    <span className='employ'>{user.project}</span></p>)}\r\n                    <h5 className='p-3 s'>Status</h5>\r\n                    <p className='p-3'><img className='p-2 rounded-circle z-depth-0' src='https://res.cloudinary.com/valodagreat/image/upload/v1596159400/w8udl2lhrno3qie9lwdf.jpg' height='65' alt='stuff'/> \r\n                    <span className='employ'>Full Time</span></p>\r\n                    <p className='p-3'><img className='p-2 rounded-circle z-depth-0' src='https://res.cloudinary.com/valodagreat/image/upload/v1596159280/nseh1tb8xzdxrec1tf2a.jpg' height='65' alt='stuff'/> \r\n                    <span className='employ'>Part Time</span></p>\r\n                    {this.props.route==='addproduct' ? null :<div className='btns'>\r\n                    <button onClick={this.addProduct} type=\"button\" className=\"btn aqua-gradient btn-rounded m-3\">add project</button></div>\r\n                    }{\r\n                        this.props.route === 'noProduct' ? null : <div className='p-5 post'><h4 className='p-2'>Add Project</h4>\r\n                            <div className='text-center p-2'>\r\n                            <label htmlFor='projectTitle'>Title <input type=\"text\" required name=\"projectTitle\"  onChange={this.props.titleChange} /> </label></div>\r\n                            <div className='text-center p-2'>\r\n                            <label htmlFor='projectUrl'>Link <input type=\"text\" name=\"projectUrl\" required  onChange={this.props.urlChange} /></label></div>\r\n                            <div><input type=\"file\" onChange={this.fileChangedHandler}/></div>\r\n                            <div className='p-2'>\r\n                            <button onClick={this.includeProduct} className='btn aqua-gradient  btn-rounded'>Submit</button>\r\n                            <button onClick={this.cancelSubmit} className='btn aqua-gradient  btn-rounded'>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee\r\n","import React, { Component } from 'react'\r\nimport './DashBoard.css'\r\nimport {FaPencilAlt, FaTrashAlt } from 'react-icons/fa'\r\n\r\nclass DashBoard extends Component {\r\n    state={\r\n        employee : [],\r\n        name : \"\",\r\n        position : \"\",\r\n        salary : \"\",\r\n        status : \"\",\r\n        trial : \"\",\r\n        period : \"\",\r\n        url : \"\",\r\n        updateName : '',\r\n        updatePosition : '',\r\n        updateSalary : '',\r\n        updateStatus : '',\r\n        updateTrial : '',\r\n        updatePeriod : '',\r\n        updateUrl : '',\r\n        id : '',\r\n        modName : '',\r\n        delId : '',\r\n        delete : '',\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://frozen-woodland-32017.herokuapp.com/p')\r\n        .then(response =>response.json())\r\n        .then(data=>{\r\n            this.setState({employee : data})\r\n        })\r\n    }\r\n\r\n    includeEmployee=()=>{\r\n        fetch('https://frozen-woodland-32017.herokuapp.com/dashboard',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name : this.state.name,\r\n                position : this.state.position,\r\n                salary : this.state.salary,\r\n                status : this.state.status,\r\n                trial : this.state.trial,\r\n                period : this.state.period,\r\n                url : this.state.url\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                employee : data,\r\n                name : \"\",\r\n                position : \"\",\r\n                salary : \"\",\r\n                status : \"\",\r\n                trial : \"\",\r\n                period : \"\",\r\n                url : \"\",\r\n            })\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    updateEmployee=()=>{\r\n        fetch('https://frozen-woodland-32017.herokuapp.com/update',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id : this.state.id,\r\n                name : this.state.updateName,\r\n                position : this.state.updatePosition,\r\n                salary : this.state.updateSalary,\r\n                status : this.state.updateStatus,\r\n                trial : this.state.updateTrial,\r\n                period : this.state.updatePeriod,\r\n                url : this.state.updateUrl\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            this.setState({ employee : data})\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        const{name, value}= event.target\r\n        this.setState({[name] : value})\r\n    }\r\n\r\n    initialFormValue=(rec)=>{\r\n        this.setState({\r\n            id : rec.id ,\r\n            updateName : rec.name,\r\n            updatePosition : rec.position,\r\n            updateSalary : rec.salary,\r\n            updateStatus : rec.status,\r\n            updateTrial : rec.trial,\r\n            updatePeriod : rec.period,\r\n            updateUrl : rec.url,\r\n        })\r\n    }\r\n\r\n    secondFormValue=(vac)=>{\r\n        this.setState({\r\n            delId : vac.id,\r\n            modName : vac.name\r\n        })\r\n    }\r\n\r\n    deletedEmployee=()=>{\r\n        console.log(this.state.delete)\r\n        if(this.state.delete==='Yes'){\r\n        fetch('https://frozen-woodland-32017.herokuapp.com/delete',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id : this.state.delId\r\n            })\r\n        }).then(res => res.json())\r\n            .then(info =>{\r\n            if(info.id){\r\n            fetch('https://frozen-woodland-32017.herokuapp.com/p')\r\n            .then(response =>response.json())\r\n            .then(data=>{\r\n                this.setState({employee : data})\r\n            })}\r\n        })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='bredth p-2'>\r\n                <div className=\"modal fade\" id=\"modalRegisterForm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header text-center\">\r\n                        <h4 className=\"modal-title w-100 font-weight-bold\">Employee's Profile</h4>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body mx-3\">\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-name\" required name='name' onChange={this.handleChange} placeholder='Andy Rob' value={this.state.name} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\"  htmlFor=\"orangeForm-name\">Name</label>\r\n                        </div>\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-position\" required name='position' onChange={this.handleChange} placeholder='Project Manager' value={this.state.position} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-position\">Position</label>\r\n                        </div>\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-salary\" required name='salary' onChange={this.handleChange} value={this.state.salary} placeholder='3.200 NOK' className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-salary\">Salary</label>\r\n                        </div>\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-status\" required name='status' onChange={this.handleChange} placeholder='Full/Part Time' value={this.state.status} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-status\">Status</label>\r\n                        </div>\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-trial\" required name='trial' onChange={this.handleChange} placeholder='test period' value={this.state.trial} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-trial\">Level</label>\r\n                        </div>\r\n                        <div className=\"md-form mb-5\">\r\n                        <input type=\"text\" id=\"orangeForm-period\" required name='period' onChange={this.handleChange} placeholder='2 months' value={this.state.period} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-period\">Duration</label>\r\n                        </div>\r\n\r\n                        <div className=\"md-form mb-4\">\r\n                        <input type=\"text\" id=\"orangeForm-url\" required name='url' onChange={this.handleChange} value={this.state.url} className=\"form-control validate\"/>\r\n                        <label data-error=\"wrong\" data-success=\"right\" htmlFor=\"orangeForm-url\">Image Url</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                        <button onClick={this.includeEmployee} data-dismiss=\"modal\" className=\"btn btn-deep-orange\"  >Add</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                <button  className=\"btn btn-default btn-rounded mb-4\" data-toggle=\"modal\" data-target=\"#modalRegisterForm\">Add employee</button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-around gen\">\r\n                    <h4 className='p-1'>Employee</h4>\r\n                    <h4 className='p-1'>Salary</h4>\r\n                    <h4 className='p-1'>Status</h4>\r\n                    <h4 className='p-1'>Manage</h4>\r\n                </div>\r\n                {\r\n                    this.state.employee.sort((a,b)=> a.id - b.id).map(user=> <div key={user.id} className=\"beneath card gen  my-3\"> <div className=\"d-flex justify-content-around p-3\">\r\n                        <div className='d-flex justify-content-center align-items-center'>\r\n                        <div className=\"d-flex justify-content-between align-items-center set p-1 h\">\r\n                            <img className='rounded-circle z-depth-0' src={user.url} width='50'  height='50' alt='stuff'/>\r\n                            <p className=''>{user.name}<br/><span className='p py-3'>{user.position}</span></p>\r\n                        </div>\r\n                        </div>\r\n                            <div className='d-flex justify-content-center align-items-center p-1'><p className=''>{user.salary}<br/><span className='p py-2'>{user.status}</span></p></div>\r\n                            <div className='d-flex justify-content-center align-items-center p-1'><p className=''>{user.trial}<br/><span className='p py-2'>{user.period}</span></p></div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className=\"d-flex justify-content-center align-items-center p-2 border-right p-1\">\r\n                                    <FaPencilAlt className='cursor' onClick={()=>this.initialFormValue(user)} size='20'  data-toggle=\"modal\" data-target=\"#modalUpdateForm\"/>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center align-items-center p-2\">\r\n                                <FaTrashAlt className=\"cursor\" onClick={()=>this.secondFormValue(user)} size='20' data-toggle=\"modal\" data-target='#modalContactForm' />\r\n                            </div>\r\n                        </div>\r\n                    </div></div>)\r\n                }\r\n                <div className=\"modal fade\" id=\"modalUpdateForm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                                    aria-hidden=\"true\">\r\n                                    <div className=\"modal-dialog\" role=\"document\">\r\n                                        <div className=\"modal-content\">\r\n                                        <div className=\"modal-header text-center\">\r\n                                            <h4 className=\"modal-title w-100 font-weight-bold\">Update Employee's Profile</h4>\r\n                                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"modal-body mx-3\">\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={`orangeForm-updateName`} required name='updateName' onChange={this.handleChange} placeholder='Name e.g (Andy Rob)'  value={this.state.updateName} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\"  htmlFor={`orangeForm-updateName`}></label>\r\n                                            </div>\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={\"orangeForm-updatePosition\"} required name='updatePosition' onChange={this.handleChange} placeholder='Job Description e.g (Project Manager)'  value={this.state.updatePosition} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updatePosition\"}></label>\r\n                                            </div>\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={\"orangeForm-updateSalary\"} required name='updateSalary' onChange={this.handleChange} placeholder='Salary e.g (3.200 NOK)' value={this.state.updateSalary} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updateSalary\"}></label>\r\n                                            </div>\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={\"orangeForm-updateStatus\"} required name='updateStatus' onChange={this.handleChange} placeholder='Status e.g (Full/Part Time)'  value={this.state.updateStatus} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updateStatus\"}></label>\r\n                                            </div>\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={\"orangeForm-updateTrial\"} required name='updateTrial' onChange={this.handleChange} placeholder='Level e.g (test period)'  value={this.state.updateTrial} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updateTrial\"}></label>\r\n                                            </div>\r\n                                            <div className=\"md-form mb-5\">\r\n                                            <input type=\"text\" id={\"orangeForm-updatePeriod\"} required name='updatePeriod' onChange={this.handleChange} placeholder='Duration e.g (2 months)'  value={this.state.updatePeriod} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updatePeriod\"}></label>\r\n                                            </div>\r\n\r\n                                            <div className=\"md-form mb-4\">\r\n                                            <input type=\"text\" id={\"orangeForm-updateUrl\"} required name='updateUrl' onChange={this.handleChange} placeholder='Image updateUrl' value={this.state.updateUrl} className=\"form-control validate\"/>\r\n                                            <label data-error=\"wrong\" data-success=\"right\" htmlFor={\"orangeForm-updateUrl\"}></label>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"modal-footer d-flex justify-content-center\">\r\n                                            <button onClick={this.updateEmployee} data-dismiss=\"modal\" className=\"btn btn-deep-orange\"  >Update</button>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                        <div className=\"modal fade\" id=\"modalContactForm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                            aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                <div className=\"modal-header text-center\">\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body mx-3\">\r\n                                        <div className=\"mb-5\">\r\n                                        <p>Are you sure you want to delete {this.state.modName} from your employees ? </p>\r\n                                        </div>\r\n                                    <div className=\"form-check mb-5\">\r\n                                        <div className=''>\r\n                                            <label  htmlFor=\"defaultForm-email\"><input onChange={this.handleChange} checked={this.state.delete==='Yes'} name='delete' value='Yes' type=\"radio\" id=\"defaultForm-email\" className=\"form-check-input validate\"/>Yes</label>\r\n                                            </div>\r\n                                            <div className=''>\r\n                                            <label htmlFor=\"defaultForm\"><input name='delete' onChange={this.handleChange} checked={this.state.delete==='No'} value='No' type=\"radio\" id=\"defaultForm\" className=\"form-check-input validate\"/>No</label>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                </div>\r\n                                <div className=\"modal-footer d-flex justify-content-center\">\r\n                                    <button onClick={this.deletedEmployee} data-dismiss=\"modal\" className=\"btn btn-default\">Submit</button>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashBoard\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport Employee from './components/employee/Employee';\nimport DashBoard from './components/dashboard/DashBoard';\n\nclass App extends Component {\n  state={\n    route : 'noProduct',\n    title : '',\n    url : ''\n  }\n  handleRouteChange=(route)=>{\n    this.setState({route: route})\n  }\n  handleProjectTitleChange=(e)=>{\n    this.setState({title : e.target.value})\n  }\n\n  handleProjectUrlChange=(e)=>{\n    this.setState({url : e.target.value})\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <div className='d-flex justify-content-between media'>\n        <Employee route={this.state.route} onRouteChange={this.handleRouteChange}\n        url={this.state.url} title={this.state.title}  titleChange={this.handleProjectTitleChange} urlChange={this.handleProjectUrlChange} />\n        <DashBoard/>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}